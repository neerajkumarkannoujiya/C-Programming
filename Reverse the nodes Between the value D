#include<stdio.h>
#include<stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

void insertAtEnd(struct Node** head, int x) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = x;
    newNode->next = NULL;

    if (*head == NULL) {
        *head = newNode;
        return;
    }

    struct Node* ptr = *head;
    while (ptr->next != NULL) {
        ptr = ptr->next;
    }
    ptr->next = newNode;
}

void print(struct Node *head) {
    while (head != NULL) {
        printf("%d", head->data);
        if (head->next != NULL) {
                printf(" -> ");
        }
        head = head->next;
    }
    printf("\n");
}

struct Node* reverseD(struct Node* head, int d) {
    struct Node* Next = NULL;
    struct Node* prev = NULL;
    struct Node* curr = head;

    while (curr != NULL && curr->data!=d) {
                Next = curr->next;
                curr->next = prev;
                prev = curr;
                curr = Next;
    }

    if(curr!=NULL){
        head->next = curr;
    }
    return prev;

}

int main() {
    int n, d;
    scanf("%d %d", &n, &d);
    int val;
    struct Node* head = NULL;

    for (int i = 0; i < n; i++) {
        scanf("%d", &val);
        insertAtEnd(&head, val);
    }

    print(head);
    struct Node* curr = head;
    while(curr!=NULL){
        if(curr->data==d){
                struct Node* newNode = reverseD(curr->next,d);
                curr->next = newNode;
        }
        curr=curr->next;

    }
    print(head);

    return 0;
}

