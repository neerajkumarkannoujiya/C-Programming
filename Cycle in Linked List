#include<stdio.h>
#include<stdlib.h>

struct Node{
        int data;
        struct Node* next;
};

void insertAtEnd(struct Node **head,int data)
{
    
        struct Node *newNode = NULL;
        newNode = (struct Node*)malloc(sizeof(struct Node));
        newNode->data = data;
        newNode->next = NULL;
    
        if(*head==NULL){
                *head = newNode;
                return;
        }

        struct Node *ptr = *head;
        while(ptr->next!=NULL){
                ptr=ptr->next;
        }
        ptr->next = newNode;
}

int cycle(struct Node*head)
{
        struct Node *slow = head;
        struct Node *fast = head;
        if(head==NULL){
                return 0;
        }
        if(head->next==NULL){
                return 0;
        }
        while(fast!=NULL && fast->next!=NULL){
                slow = slow->next;
                fast = fast->next->next;
                if(slow==fast){
                        return 1;
                }
        }
        return 0;

}

void main()
{
        struct Node* head = NULL;
        insertAtEnd(&head,1);
        insertAtEnd(&head,2);
        insertAtEnd(&head,3);
        insertAtEnd(&head,4);
        insertAtEnd(&head,5);
        insertAtEnd(&head,6);
        head->next->next->next->next=head->next;
        if(cycle(head)){
                printf("The LinkedList have Cycle.\n");
        }
        else{
                printf("The LinkedList have No Cycle.\n");
        }


}
