Given a BST and a key, write a function that prints all the ancestors of the key in the given binary tree.





******************************************************************************************************************************************


#include<stdio.h>
#include<stdlib.h>

struct Node{
        int data;
        struct Node* left;
        struct Node* right;
};

struct Node* newNode(int data)
{
        struct Node* node = (struct Node*)malloc(sizeof(struct Node));
        node->data = data;
        node->right = node->left = NULL;
        return node;
}

struct Node* insert(struct Node* root,int data)
{
        if(root==NULL)return newNode(data);
        if(data<root->data){
                root->left = insert(root->left,data);
        }
        else if(data>root->data){
                root->right = insert(root->right,data);
        }
        return root;
}

int printAncestors(struct Node* root,int k)
{
        if(root==NULL)return 0;
        if(root->data==k){
                return 1;
        }
        if(printAncestors(root->left,k) || printAncestors(root->right,k)){
                printf("%d ",root->data);
                return 1;
        }

        return 0;
}

int main()
{
        int n;
        scanf("%d",&n);
        struct Node* root = NULL;
        int val,key;
        for(int i =0;i<n;i++){
                scanf("%d",&val);
                root = insert(root,val);
        }
        printf("Enter the key to find ancestors: ");
        scanf("%d", &key);

        printf("Ancestors of %d: ", key);
        if (!printAncestors(root, key)) {
                printf("Key not found in the tree.");
        }
        printf("\n");
        return 0;
}

