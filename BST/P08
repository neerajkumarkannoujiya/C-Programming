Construct a full binary tree from given pre-order and post-order traversals and print in-order traversal
of it.





******************************************************************************************************************************************



#include<stdio.h>
#include<stdlib.h>


struct Node
{
        int data;
        struct Node *left;
        struct Node *right;
};


struct Node *create(int data)
{
        struct Node *newNode=(struct Node*)malloc(sizeof(struct Node));
        newNode->data=data;
        newNode->left=newNode->right=NULL;
        return newNode;
}


struct Node *insert(struct Node *root,int data)
{
        if(root==NULL)
        {
                return create(data);
        }
        if(data<root->data)
        {
                root->left=insert(root->left,data);
        }
        else if(data>root->data)
        {
                root->right=insert(root->right,data);
        }
        return root;
}


struct Node* solve(int post[],int pre[],int st, int end,int *preInd)
{
        if(st>end){
                return NULL;
        }
        int ele = pre[*preInd];
        (*preInd)++;
        struct Node* root = create(ele);
        if(st==end)return root;

        int pos;
        for(pos=st;pos<=end;pos++){
                if(post[pos]==pre[*preInd])break;
        }
        if(pos<=end){
                root->left = solve(post,pre,st,pos,preInd);
                root->right = solve(post,pre,pos+1,end-1,preInd);
        }
        return root;
}


void printInOrder(struct Node* root)
{
        if(root==NULL)return;
        printInOrder(root->left);
        printf("%d ",root->data);
        printInOrder(root->right);
}


int main()
{
        int n;
        printf("Enter the no. of nodes : \n");
        scanf("%d",&n);
        int preOrder[n];
        int postOrder[n];
        printf("Enter postorder : \n");
        for(int i=0;i<n;i++)
        {
                scanf("%d",&postOrder[i]);
        }
        printf("Enter Preorder : \n");
        for(int i=0;i<n;i++)
        {
                scanf("%d",&preOrder[i]);
        }
        int preInd = 0;
        printf("The PostOrder is : \n");
        struct Node* root = solve(postOrder,preOrder,0,n-1,&preInd);
        printInOrder(root);
        printf("\n");

        return 0;
}

